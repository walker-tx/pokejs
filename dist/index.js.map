{"version":3,"sources":["../src/errors.ts","../src/constants.ts","../src/endpoints/games/generation.ts","../src/endpoints/pokemon/pokemon.ts","../src/index.ts"],"sourcesContent":["/**\n * Represents an HTTP error specific to the PokeAPI SDK.\n *\n * @extends Error\n *\n * @remarks\n * This error is thrown when an HTTP request to the PokeAPI fails.\n * It includes the HTTP status code and the error message from the response.\n */\nexport class PokeSdkHttpError extends Error {\n  constructor(\n    public status: number,\n    public override message: string,\n  ) {\n    super(message);\n    this.name = \"PokeApiSdkError\";\n  }\n\n  /**\n   * Creates a `PokeHttpError` instance from a given HTTP response.\n   *\n   * @param response - The HTTP response object.\n   * @returns A promise that resolves to a `PokeHttpError` instance.\n   */\n  static async fromResponse(response: Response): Promise<PokeSdkHttpError> {\n    return new PokeSdkHttpError(response.status, await response.text());\n  }\n}\n\n/**\n * Represents an error specific to the PokeClient or its usage.\n *\n * @extends {Error}\n *\n * @param {string} message - The error message.\n *\n * @remarks\n * This error is thrown when an error occurs in the PokeClient or its usage,\n * such as an invalid parameter.\n */\nexport class PokeSdkClientError extends Error {\n  constructor(public override message: string) {\n    super(message);\n  }\n}\n","export const BASE_API_URL = \"https://pokeapi.co/api/v2\" as const;\n","import type { Generation, NamedAPIResourceList } from \"../../types/poke-api.js\";\nimport { PokeSdkClientError, PokeSdkHttpError } from \"../../errors.js\";\nimport { BASE_API_URL } from \"../../constants.js\";\nimport type { Result } from \"../../types/utility.js\";\n\n/**\n * Fetches a Pokémon generation by its name or ID. Intended only for internal\n * use by the SDK.\n *\n * @param {string | number} nameOrId - The name or ID of the Pokémon generation\n * to fetch.\n *\n * @returns {Promise<Result<Generation, PokeSdkHttpError>>} A promise that\n * resolves to a tuple containing the generation data or an error.\n *\n * @see https://pokeapi.co/docs/v2#generation\n */\nasync function _fetchGeneration(\n  nameOrId: string | number\n): Promise<Result<Generation, PokeSdkHttpError>> {\n  const response = await fetch(`${BASE_API_URL}/generation/${nameOrId}`);\n  if (response.ok) return [await response.json(), null];\n  return [null, await PokeSdkHttpError.fromResponse(response)];\n}\n\n/**\n * Retrieves a Pokémon generation by its name.\n *\n * @param name - The name of the generation to retrieve.\n *\n * @returns {Promise<Result<Generation, PokeSdkClientError | PokeSdkHttpError>>}\n * A promise that resolves to a tuple containing the generation data or an\n * error.\n *\n * @example\n * ```ts\n * const [generation, error] = await getGenerationByName(\"generation-i\");\n *\n * if (error) {\n *  console.error(`Failed to fetch generation: ${error.message}`);\n * } else {\n *  console.log(`Fetched generation: ${generation.name}`);\n * }\n */\nexport async function getGenerationByName(\n  name: string\n): Promise<Result<Generation, PokeSdkClientError | PokeSdkHttpError>> {\n  if (name === \"\") {\n    return [\n      null,\n      new PokeSdkClientError(\"The name of the generation cannot be empty.\"),\n    ];\n  }\n\n  return _fetchGeneration(name);\n}\n\n/**\n * Retrieves a Pokémon generation by its ID.\n *\n * @param id - The ID of the generation to fetch.\n *\n * @returns {Promise<Result<Generation, PokeSdkHttpError>>} A promise that\n * resolves to a tuple containing the generation data or an error.\n *\n * @example\n * ```ts\n * const [generation, error] = await getGenerationById(1);\n *\n * if (error) {\n *  console.error(`Failed to fetch generation: ${error.message}`);\n * } else {\n *  console.log(`Fetched generation: ${generation.name}`);\n * }\n * ```\n *\n * @see https://pokeapi.co/docs/v2#generation\n */\nexport async function getGenerationById(\n  id: number\n): Promise<Result<Generation, PokeSdkHttpError>> {\n  return _fetchGeneration(id);\n}\n\n/**\n * Fetches a list of Pokémon generations from the API.\n *\n * @returns {Promise<Result<NamedAPIResourceList, PokeSdkHttpError>>} A\n * promise that resolves to a tuple containing the generation list or an error.\n *\n * @example\n * ```ts\n * const [generations, error] = await listGenerations();\n *\n * if (error) {\n *  console.error(`Failed to fetch generations: ${error.message}`);\n * } else {\n *  console.log(`Fetched ${generations.length} generations.`);\n * }\n * ```\n *\n * @see https://pokeapi.co/docs/v2#generation\n * @see https://pokeapi.co/docs/v2#named\n */\nexport async function listGenerations(): Promise<\n  Result<NamedAPIResourceList, PokeSdkHttpError>\n> {\n  const response = await fetch(`${BASE_API_URL}/generation`);\n  if (response.ok) return [await response.json(), null];\n  return [null, await PokeSdkHttpError.fromResponse(response)];\n}\n","import { BASE_API_URL } from \"../../constants.js\";\nimport { PokeSdkClientError, PokeSdkHttpError } from \"../../errors.js\";\nimport type { NamedAPIResourceList, Pokemon } from \"../../types/poke-api.js\";\nimport type { Result } from \"../../types/utility.js\";\n\n/**\n * Fetches a Pokémon by its name or ID from the Pokémon API.\n * Intended only for internal use by the SDK.\n *\n * @param {string} nameOrId - The name or ID of the Pokémon to fetch.\n *\n * @returns {Promise<Result<Pokemon, PokeSdkHttpError>>} A promise that resolves\n * to a Result containing either the fetched Pokémon data or an error.\n */\nasync function _fetchPokemon(\n  nameOrId: string | number\n): Promise<Result<Pokemon, PokeSdkHttpError>> {\n  const response = await fetch(`${BASE_API_URL}/pokemon/${nameOrId}`);\n\n  if (response.ok) return [await response.json(), null];\n\n  return [null, await PokeSdkHttpError.fromResponse(response)];\n}\n\n/**\n * Fetches a Pokémon by its name.\n *\n * @param {string} name - The name of the Pokémon to fetch.\n\n * @returns {Promise<Result<Pokemon, PokeSdkClientError | PokeSdkHttpError>>} A promise that\n * resolves to a tuple containing the Pokémon data or an error.\n *\n * @example\n * ```ts\n * const [pokemon, error] = await getPokemonByName(\"pikachu\");\n *\n * if (error) {\n *   console.error(`Failed to fetch Pokémon: ${error.message}`);\n * } else {\n *   console.log(`Fetched Pokémon: ${pokemon.name}`);\n * }\n * ```\n * @see https://pokeapi.co/docs/v2#pokemon\n */\nexport async function getPokemonByName(\n  name: string\n): Promise<Result<Pokemon, PokeSdkClientError | PokeSdkHttpError>> {\n  if (name === \"\") {\n    return [\n      null,\n      new PokeSdkClientError(\"The name of the Pokémon cannot be empty.\"),\n    ];\n  }\n\n  return _fetchPokemon(name);\n}\n\n/**\n * Retrieves a Pokémon by its ID.\n *\n * @param id - The unique identifier of the Pokémon.\n *\n * @returns {Promise<Result<Pokemon, PokeSdkHttpError>>} A promise that resolves\n * to a tuple containing the Pokémon data or an error.\n *\n * @example\n * ```ts\n * const [pokemon, error] = await getPokemonById(25);\n *\n * if (error) {\n *   console.error(`Failed to fetch Pokémon: ${error.message}`);\n * } else {\n *   console.log(`Fetched Pokémon: ${pokemon.name}`);\n * }\n * ```\n * @see https://pokeapi.co/docs/v2#pokemon\n */\nexport async function getPokemonById(\n  id: number\n): Promise<Result<Pokemon, PokeSdkHttpError>> {\n  return _fetchPokemon(id);\n}\n\n/**\n * Fetches a list of Pokémon from the API.\n *\n * @returns {Promise<Result<NamedAPIResourceList, PokeSdkHttpError>>} A\n * promise that resolves to a tuple where the first element is the list of\n * Pokémon resources if the request is successful, or null if it fails.\n *\n * @example\n * ```ts\n * const [pokemonList, error] = await listPokemon();\n *\n * if (error) {\n *  console.error(`Failed to fetch Pokémon: ${error.message}`);\n * } else {\n *  console.log(`Fetched ${pokemonList.length} Pokémon`);\n * }\n * ```\n *\n * @see https://pokeapi.co/docs/v2#pokemon\n * @see https://pokeapi.co/docs/v2#named\n */\nexport async function listPokemon(): Promise<\n  Result<NamedAPIResourceList, PokeSdkHttpError>\n> {\n  const response = await fetch(`${BASE_API_URL}/pokemon`);\n\n  if (response.ok) return [await response.json(), null];\n\n  return [null, await PokeSdkHttpError.fromResponse(response)];\n}\n","import {\n  getGenerationById,\n  getGenerationByName,\n} from \"./endpoints/games/generation.js\";\nimport {\n  getPokemonById,\n  getPokemonByName,\n} from \"./endpoints/pokemon/pokemon.js\";\n\nexport * from \"./types/poke-api.js\";\n\nconst pokemon = {\n  getByName: getPokemonByName,\n  getById: getPokemonById,\n};\n\nconst games = {\n  generation: {\n    getByName: getGenerationByName,\n    getById: getGenerationById,\n  },\n};\n\nexport const PokeJS = {\n  pokemon,\n  games,\n};\n\nexport * from \"./endpoints/games/generation.js\";\nexport * from \"./endpoints/pokemon/pokemon.js\";\n"],"mappings":";AASO,IAAM,mBAAN,MAAM,0BAAyB,MAAM;AAAA,EAC1C,YACS,QACS,SAChB;AACA,UAAM,OAAO;AAHN;AACS;AAGhB,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,aAAa,UAA+C;AACvE,WAAO,IAAI,kBAAiB,SAAS,QAAQ,MAAM,SAAS,KAAK,CAAC;AAAA,EACpE;AACF;AAaO,IAAM,qBAAN,cAAiC,MAAM;AAAA,EAC5C,YAA4B,SAAiB;AAC3C,UAAM,OAAO;AADa;AAAA,EAE5B;AACF;;;AC5CO,IAAM,eAAe;;;ACiB5B,eAAe,iBACb,UAC+C;AAC/C,QAAM,WAAW,MAAM,MAAM,GAAG,YAAY,eAAe,QAAQ,EAAE;AACrE,MAAI,SAAS,GAAI,QAAO,CAAC,MAAM,SAAS,KAAK,GAAG,IAAI;AACpD,SAAO,CAAC,MAAM,MAAM,iBAAiB,aAAa,QAAQ,CAAC;AAC7D;AAqBA,eAAsB,oBACpB,MACoE;AACpE,MAAI,SAAS,IAAI;AACf,WAAO;AAAA,MACL;AAAA,MACA,IAAI,mBAAmB,6CAA6C;AAAA,IACtE;AAAA,EACF;AAEA,SAAO,iBAAiB,IAAI;AAC9B;AAuBA,eAAsB,kBACpB,IAC+C;AAC/C,SAAO,iBAAiB,EAAE;AAC5B;AAsBA,eAAsB,kBAEpB;AACA,QAAM,WAAW,MAAM,MAAM,GAAG,YAAY,aAAa;AACzD,MAAI,SAAS,GAAI,QAAO,CAAC,MAAM,SAAS,KAAK,GAAG,IAAI;AACpD,SAAO,CAAC,MAAM,MAAM,iBAAiB,aAAa,QAAQ,CAAC;AAC7D;;;AChGA,eAAe,cACb,UAC4C;AAC5C,QAAM,WAAW,MAAM,MAAM,GAAG,YAAY,YAAY,QAAQ,EAAE;AAElE,MAAI,SAAS,GAAI,QAAO,CAAC,MAAM,SAAS,KAAK,GAAG,IAAI;AAEpD,SAAO,CAAC,MAAM,MAAM,iBAAiB,aAAa,QAAQ,CAAC;AAC7D;AAsBA,eAAsB,iBACpB,MACiE;AACjE,MAAI,SAAS,IAAI;AACf,WAAO;AAAA,MACL;AAAA,MACA,IAAI,mBAAmB,6CAA0C;AAAA,IACnE;AAAA,EACF;AAEA,SAAO,cAAc,IAAI;AAC3B;AAsBA,eAAsB,eACpB,IAC4C;AAC5C,SAAO,cAAc,EAAE;AACzB;AAuBA,eAAsB,cAEpB;AACA,QAAM,WAAW,MAAM,MAAM,GAAG,YAAY,UAAU;AAEtD,MAAI,SAAS,GAAI,QAAO,CAAC,MAAM,SAAS,KAAK,GAAG,IAAI;AAEpD,SAAO,CAAC,MAAM,MAAM,iBAAiB,aAAa,QAAQ,CAAC;AAC7D;;;ACrGA,IAAM,UAAU;AAAA,EACd,WAAW;AAAA,EACX,SAAS;AACX;AAEA,IAAM,QAAQ;AAAA,EACZ,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AACF;AAEO,IAAM,SAAS;AAAA,EACpB;AAAA,EACA;AACF;","names":[]}